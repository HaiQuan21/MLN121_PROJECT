import { motion } from 'framer-motion';
import { useState } from 'react';

const features = [
    {
      iconImage: '/assets/vi_dien_tu.jpg',
      title: 'V√≠ ƒëi·ªán t·ª≠',
      desc: 'Momo, ZaloPay, VNPay - l∆∞u tr·ªØ v√† thanh to√°n ti·ªÅn ƒëi·ªán t·ª≠ tr√™n smartphone',
      color: 'from-purple-500 to-pink-500',
      detailedImage: '/assets/vi_dien_tu.jpg',
      detailedInfo: 'V√≠ ƒëi·ªán t·ª≠ (digital wallet) ph·ªï bi·∫øn t·ª´ nh·ªØng nƒÉm 2010, v·ªõi c√°c v√≠ ƒë·ªãa ph∆∞∆°ng ·ªü Vi·ªát Nam nh∆∞ Momo (2010), ZaloPay (2016) v√† VNPay. Ch√∫ng l∆∞u tr·ªØ v√† thanh to√°n ti·ªÅn ƒëi·ªán t·ª≠ qua smartphone, h·ªó tr·ª£ QR code, chuy·ªÉn kho·∫£n v√† mua s·∫Øm, th∆∞·ªùng li√™n k·∫øt v·ªõi ng√¢n h√†ng. ∆Øu ƒëi·ªÉm l√† ti·ªán l·ª£i v√† an to√†n (NFC, m√£ h√≥a), nh∆∞ng ph·ª• thu·ªôc v√†o k·∫øt n·ªëi internet v√† c√≥ ph√≠ giao d·ªãch.',
      source: 'V√≠ ƒëi·ªán t·ª≠ Momo - m·ªôt trong nh·ªØng v√≠ ph·ªï bi·∫øn nh·∫•t Vi·ªát Nam',
      sourceUrl: 'https://www.aia.com.vn/vi/song-khoe/loi-khuyen/tai-chinh/vi-dien-tu-la-gi.html'
    },
    {
      iconImage: '/assets/ngan_hang_so.png',
      title: 'Ng√¢n h√†ng s·ªë',
      desc: 'Giao d·ªãch 24/7 kh√¥ng c·∫ßn ƒë·∫øn chi nh√°nh, m·ªçi thao t√°c qua app',
      color: 'from-blue-500 to-cyan-500',
      detailedImage: '/assets/ngan_hang_so.png',
      detailedInfo: 'Ng√¢n h√†ng s·ªë (digital banking) b·∫Øt ƒë·∫ßu ph·ªï bi·∫øn t·ª´ nh·ªØng nƒÉm 1990, v·ªõi c√°c ng√¢n h√†ng ƒë·∫ßu ti√™n cung c·∫•p d·ªãch v·ª• tr·ª±c tuy·∫øn nh∆∞ Stanford Federal Credit Union nƒÉm 1994. N√≥ cho ph√©p giao d·ªãch 24/7 qua app ho·∫∑c web, kh√¥ng c·∫ßn ƒë·∫øn chi nh√°nh, bao g·ªìm chuy·ªÉn kho·∫£n, thanh to√°n h√≥a ƒë∆°n v√† qu·∫£n l√Ω t√†i kho·∫£n. ƒê·∫øn nay, n√≥ t√≠ch h·ª£p AI v√† b·∫£o m·∫≠t sinh tr·∫Øc h·ªçc, gi√∫p gi·∫£m chi ph√≠ v√† tƒÉng ti·ªán l·ª£i, nh∆∞ng v·∫´n ph·ª• thu·ªôc v√†o h·ªá th·ªëng ng√¢n h√†ng truy·ªÅn th·ªëng.',
      source: '·ª®ng d·ª•ng ng√¢n h√†ng s·ªë hi·ªán ƒë·∫°i',
      sourceUrl: 'https://techcombank.com/thong-tin/blog/ngan-hang-so'
    },
    {
      iconImage: '/assets/blockchain.webp',
      title: 'Blockchain',
      desc: 'C√¥ng ngh·ªá s·ªï c√°i ph√¢n t√°n, ƒë·∫£m b·∫£o t√≠nh minh b·∫°ch v√† b·∫£o m·∫≠t',
      color: 'from-green-500 to-emerald-500',
      detailedImage: '/assets/blockchain.webp',
      detailedInfo: 'C√¥ng ngh·ªá blockchain ƒë∆∞·ª£c gi·ªõi thi·ªáu nƒÉm 2008 b·ªüi Satoshi Nakamoto trong whitepaper Bitcoin, nh∆∞ m·ªôt s·ªï c√°i ph√¢n t√°n (distributed ledger) ƒë·∫£m b·∫£o minh b·∫°ch, b·∫£o m·∫≠t v√† ch·ªëng gi·∫£ m·∫°o m√† kh√¥ng c·∫ßn trung ∆∞∆°ng. M·ªói "kh·ªëi" ch·ª©a d·ªØ li·ªáu giao d·ªãch, li√™n k·∫øt b·∫±ng m√£ h√≥a, v√† ƒë∆∞·ª£c x√°c th·ª±c b·ªüi m·∫°ng l∆∞·ªõi n√∫t (nodes). N√≥ m·ªü r·ªông ·ª©ng d·ª•ng t·ª´ ti·ªÅn t·ªá ƒë·∫øn chu·ªói cung ·ª©ng v√† h·ª£p ƒë·ªìng th√¥ng minh.',
      source: 'C√¥ng ngh·ªá blockchain - s·ªï c√°i ph√¢n t√°n',
      sourceUrl: 'https://www.investopedia.com/terms/b/blockchain.asp'
    },
    {
      iconImage: '/assets/tien_dien_tu.jpg',
      title: 'Ti·ªÅn ƒëi·ªán t·ª≠',
      desc: 'Bitcoin, Ethereum - ti·ªÅn k·ªπ thu·∫≠t s·ªë phi t·∫≠p trung to√†n c·∫ßu',
      color: 'from-orange-500 to-red-500',
      detailedImage: '/assets/tien_dien_tu.jpg',
      detailedInfo: 'Ti·ªÅn ƒëi·ªán t·ª≠ (cryptocurrency) b·∫Øt ƒë·∫ßu v·ªõi Bitcoin nƒÉm 2009, theo sau l√† Ethereum nƒÉm 2015. ƒê√¢y l√† ti·ªÅn k·ªπ thu·∫≠t s·ªë phi t·∫≠p trung, s·ª≠ d·ª•ng blockchain ƒë·ªÉ giao d·ªãch to√†n c·∫ßu m√† kh√¥ng c·∫ßn ng√¢n h√†ng, v·ªõi gi√° tr·ªã d·ª±a tr√™n cung-c·∫ßu v√† c√¥ng ngh·ªá. Bitcoin t·∫≠p trung v√†o l∆∞u tr·ªØ gi√° tr·ªã nh∆∞ "v√†ng k·ªπ thu·∫≠t s·ªë", trong khi Ethereum h·ªó tr·ª£ h·ª£p ƒë·ªìng th√¥ng minh v√† ·ª©ng d·ª•ng ph√¢n t√°n (dApps).',
      source: 'Bitcoin - ti·ªÅn ƒëi·ªán t·ª≠ ƒë·∫ßu ti√™n v√† ph·ªï bi·∫øn nh·∫•t',
      sourceUrl: 'https://www.vpbank.com.vn/bi-kip-va-chia-se/retail-story-and-tips/others/tien-dien-tu-la-gi-so-sanh-tien-dien-tu-voi-tien-mat'
    },
    {
      iconImage: '/assets/defi.png',
      title: 'DeFi',
      desc: 'T√†i ch√≠nh phi t·∫≠p trung - vay m∆∞·ª£n, ƒë·∫ßu t∆∞ kh√¥ng qua trung gian',
      color: 'from-yellow-500 to-orange-500',
      detailedImage: '/assets/defi.png',
      detailedInfo: 'DeFi (Decentralized Finance) n·ªïi l√™n nƒÉm 2018 tr√™n Ethereum, v·ªõi c√°c giao th·ª©c nh∆∞ MakerDAO, cho ph√©p vay m∆∞·ª£n, ƒë·∫ßu t∆∞ v√† trao ƒë·ªïi m√† kh√¥ng qua trung gian nh∆∞ ng√¢n h√†ng, s·ª≠ d·ª•ng smart contracts. Boom nƒÉm 2020 v·ªõi TVL (total value locked) v∆∞·ª£t t·ª∑ ƒë√¥, nh∆∞ng r·ªßi ro cao nh∆∞ hack v√† bi·∫øn ƒë·ªông gi√°.',
      source: 'DeFi - T√†i ch√≠nh phi t·∫≠p trung',
      sourceUrl: 'https://coin98.net/defi-la-gi'
    },
    {
      iconImage: '/assets/cbdc.png',
      title: 'Ti·ªÅn k·ªπ thu·∫≠t s·ªë c·ªßa Ng√¢n h√†ng Trung ∆∞∆°ng (Central Bank Digital Currency - CBDC).',
      desc: 'Giao d·ªãch t·ª©c th√¨, ph√≠ th·∫•p, v∆∞·ª£t qua bi√™n gi·ªõi qu·ªëc gia',
      color: 'from-indigo-500 to-purple-500',
      detailedImage: '/assets/cbdc.png',
      detailedInfo: 'CBDC (Central Bank Digital Currency) b·∫Øt ƒë·∫ßu ph√°t tri·ªÉn m·∫°nh t·ª´ 2020, v·ªõi c√°c d·ª± √°n nh∆∞ e-CNY (Trung Qu·ªëc) v√† Sand Dollar (Bahamas). ƒê√¢y l√† ti·ªÅn k·ªπ thu·∫≠t s·ªë do ng√¢n h√†ng trung ∆∞∆°ng ph√°t h√†nh, k·∫øt h·ª£p l·ª£i √≠ch c·ªßa crypto v·ªõi s·ª± ·ªïn ƒë·ªãnh fiat. ƒê·∫øn 2025, h∆°n 100 qu·ªëc gia ƒëang nghi√™n c·ª©u, t·∫≠p trung v√†o thanh to√°n nhanh v√† bao ph·ªß t√†i ch√≠nh.',
      source: 'CBDC - Ti·ªÅn k·ªπ thu·∫≠t s·ªë ng√¢n h√†ng trung ∆∞∆°ng',
      sourceUrl: 'https://www.dnse.com.vn/hoc/cbdc-la-gi'
    },
  ];

// Function ƒë·ªÉ extract domain name t·ª´ URL
function getDomainName(url: string): string {
  try {
    const domain = new URL(url).hostname;
    return domain.replace('www.', '');
  } catch {
    return url;
  }
}

// Modal component ƒë·ªÉ hi·ªÉn th·ªã th√¥ng tin chi ti·∫øt
function DetailModal({ item, isOpen, onClose }: { 
  item: typeof features[0] | null; 
  isOpen: boolean; 
  onClose: () => void; 
}) {
  if (!isOpen || !item) return null;

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"
      onClick={onClose}
    >
      <motion.div
        initial={{ scale: 0.8, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        exit={{ scale: 0.8, opacity: 0 }}
        className="bg-white rounded-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto"
        onClick={(e) => e.stopPropagation()}
      >
        <div className="p-6">
          <div className="flex justify-between items-start mb-4">
            <div>
              <h2 className="text-3xl font-bold text-slate-800">{item.title}</h2>
            </div>
            <button
              onClick={onClose}
              className="text-gray-500 hover:text-gray-700 text-2xl font-bold"
            >
              √ó
            </button>
          </div>
          
          {item.detailedImage && (
            <div className="mb-6">
              <img
                src={item.detailedImage}
                alt={item.title}
                className="w-full h-64 object-cover rounded-lg shadow-lg"
                onError={(e) => {
                  e.currentTarget.style.display = 'none';
                }}
              />
              {/* Hi·ªÉn th·ªã source ngay d∆∞·ªõi h√¨nh ·∫£nh trong modal */}
              {item.source && (
                <p className="text-sm text-slate-500 italic mt-3 text-center">
                  {item.source}
                </p>
              )}
            </div>
          )}
          
          <div className="space-y-4">
            <div>
              <h3 className="text-xl font-semibold text-slate-800 mb-2">T√≥m t·∫Øt</h3>
              <p className="text-slate-600">{item.desc}</p>
            </div>
            
            {item.detailedInfo && (
              <div>
                <h3 className="text-xl font-semibold text-slate-800 mb-2">Th√¥ng tin chi ti·∫øt</h3>
                <p className="text-slate-600 leading-relaxed">{item.detailedInfo}</p>
              </div>
            )}
            
            {item.sourceUrl && item.sourceUrl !== '#' && (
              <div>
                <h3 className="text-xl font-semibold text-slate-800 mb-2">T√¨m hi·ªÉu th√™m t·∫°i ƒë√¢y</h3>
                <a 
                  href={item.sourceUrl} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  className="text-blue-600 hover:text-blue-800 underline text-sm"
                >
                  üîó {getDomainName(item.sourceUrl)}
                </a>
              </div>
            )}
          </div>
        </div>
      </motion.div>
    </motion.div>
  );
}

export default function DigitalPage() {
  const [selectedItem, setSelectedItem] = useState<typeof features[0] | null>(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const handleItemClick = (item: typeof features[0]) => {
    setSelectedItem(item);
    setIsModalOpen(true);
  };

  const handleCloseModal = () => {
    setIsModalOpen(false);
    setSelectedItem(null);
  };

  const examples = [
    { name: 'PayPal', logo: '/assets/paypal.png', users: '400M+', desc: 'V√≠ ƒëi·ªán t·ª≠ to√†n c·∫ßu' },
    { name: 'Bitcoin', logo: '/assets/Bitcoin.png', users: '300M+', desc: 'Ti·ªÅn ƒëi·ªán t·ª≠ ƒë·∫ßu ti√™n' },
    { name: 'Momo', logo: '/assets/MoMo_Logo.png', users: '30M+', desc: 'V√≠ Vi·ªát ph·ªï bi·∫øn nh·∫•t' },
    { name: 'Ethereum', logo: '/assets/ethereum.webp', users: '200M+', desc: 'N·ªÅn t·∫£ng h·ª£p ƒë·ªìng th√¥ng minh' },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-slate-900 pt-32 pb-20">
      <div className="container mx-auto px-4">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-center mb-16"
        >
          <h1 className="text-5xl md:text-6xl font-bold text-white mb-4">
            Ti·ªÅn <span className="text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-blue-400">S·ªë h√≥a</span> l√† g√¨?
          </h1>
          <p className="text-xl text-slate-300 max-w-3xl mx-auto">
            S·ª± chuy·ªÉn ƒë·ªïi t·ª´ ti·ªÅn m·∫∑t v·∫≠t l√Ω sang c√°c h√¨nh th·ª©c thanh to√°n k·ªπ thu·∫≠t s·ªë, m·ªü ra k·ª∑ nguy√™n m·ªõi c·ªßa t√†i ch√≠nh
          </p>
        </motion.div>

        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-20">
          {features.map((feature, idx) => (
            <motion.div
              key={idx}
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ delay: idx * 0.1 }}
              whileHover={{ scale: 1.05, y: -5 }}
              whileTap={{ scale: 0.98 }}
              className="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-6 hover:bg-white/15 transition-all cursor-pointer"
              onClick={() => handleItemClick(feature)}
            >
              <motion.div
                whileHover={{ scale: 1.1, rotate: 5 }}
                transition={{ duration: 0.6 }}
                className="w-16 h-16 rounded-lg flex items-center justify-center mb-4 overflow-hidden"
              >
                <img
                  src={feature.iconImage}
                  alt={feature.title}
                  className="w-full h-full object-contain rounded-lg"
                  onError={(e) => {
                    e.currentTarget.style.display = 'none';
                  }}
                />
              </motion.div>
              <h3 className="text-2xl font-bold text-white mb-2">{feature.title}</h3>
              <p className="text-slate-300">{feature.desc}</p>
              <motion.div 
                className="mt-3 text-sm text-blue-300 font-medium"
                whileHover={{ x: 5 }}
                transition={{ duration: 0.2 }}
              >
                <motion.span
                  animate={{ x: [0, 3, 0] }}
                  transition={{ 
                    duration: 1.5,
                    repeat: Infinity,
                    ease: "easeInOut"
                  }}
                >
                  Click ƒë·ªÉ xem chi ti·∫øt ‚Üí
                </motion.span>
              </motion.div>
            </motion.div>
          ))}
        </div>

        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.6 }}
          className="bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-8 md:p-12"
        >
          <h2 className="text-3xl font-bold text-white mb-8 text-center">
            V√≠ d·ª• th·ª±c t·∫ø
          </h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {examples.map((example, idx) => (
              <motion.div
                key={idx}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.8 + idx * 0.1 }}
                whileHover={{ scale: 1.1 }}
                className="bg-white rounded-xl p-6 text-center shadow-lg"
              >
                <div className="w-16 h-16 mx-auto mb-3 flex items-center justify-center">
                  <img
                    src={example.logo}
                    alt={example.name}
                    className="w-full h-full object-contain"
                    onError={(e) => {
                      e.currentTarget.style.display = 'none';
                    }}
                  />
                </div>
                <h3 className="text-xl font-bold text-slate-800 mb-1">{example.name}</h3>
                <div className="text-blue-600 font-semibold mb-2">{example.users}</div>
                <p className="text-slate-600 text-sm">{example.desc}</p>
              </motion.div>
            ))}
          </div>
        </motion.div>

        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 1.2 }}
          className="mt-16 bg-gradient-to-r from-blue-600/20 to-purple-600/20 backdrop-blur-sm border border-white/20 rounded-2xl p-8 text-center"
        >
          <h3 className="text-2xl font-bold text-white mb-4">
            T·∫°i sao Ti·ªÅn s·ªë h√≥a quan tr·ªçng?
          </h3>
          <div className="grid md:grid-cols-3 gap-6 text-left">
            <div>
              <div className="text-3xl mb-2">‚ö°</div>
              <h4 className="text-white font-semibold mb-2">Nhanh ch√≥ng</h4>
              <p className="text-slate-300 text-sm">Giao d·ªãch ho√†n t·∫•t trong v√†i gi√¢y thay v√¨ v√†i ng√†y</p>
            </div>
            <div>
              <div className="text-3xl mb-2">üîí</div>
              <h4 className="text-white font-semibold mb-2">An to√†n</h4>
              <p className="text-slate-300 text-sm">M√£ h√≥a v√† b·∫£o m·∫≠t ƒëa l·ªõp b·∫£o v·ªá t√†i s·∫£n</p>
            </div>
            <div>
              <div className="text-3xl mb-2">üåç</div>
              <h4 className="text-white font-semibold mb-2">To√†n c·∫ßu</h4>
              <p className="text-slate-300 text-sm">Giao d·ªãch xuy√™n bi√™n gi·ªõi kh√¥ng gi·ªõi h·∫°n</p>
            </div>
          </div>
        </motion.div>
      </div>

      <DetailModal 
        item={selectedItem} 
        isOpen={isModalOpen} 
        onClose={handleCloseModal} 
      />
    </div>
  );
}
